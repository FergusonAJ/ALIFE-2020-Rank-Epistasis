ylab(paste0('p(0.6 | ', expression(theta), ')'))
# Since the problem description tells us the maximum value in D is 0.6, we know that all other values are <= 0.6.
# Therefore, the probability for these points under a uniform distribution is 1/theta, since we know theta must be >= 0.6.
# Then, to maximize prod(p(x|theta)), we can simply maximize p(0.6 | theta).
# This is what Figure X shows, and it is simple to see (and simple to calculate, that p(0.6 | theta) is maximized at theta = 0.6.
ggplot(data, aes(x, y)) +
geom_line() +
xlab(expression(theta)) +
ylab(expression('p(0.6 |' * theta *')'))
rm(list = ls())
library(ggplot2)
setwd('~/documents/school/cur_sp20/multi_disciplinary_research/project/analysis/data/2')
data_fit_L = read.csv('edit_distance_fit_L.csv')
data_fit_L$locus = as.numeric(data_fit_L$locus)
data_fit_L$gen = as.numeric(data_fit_L$gen)
data_fit_L$edit_distance = as.numeric(data_fit_L$edit_distance)
data_fit_L$environment = 'Fit'
data_fit_L$metric = 'Levenshtein'
data_fit_DL = read.csv('edit_distance_fit_DL.csv')
data_fit_DL$locus = as.numeric(data_fit_DL$locus)
data_fit_DL$gen = as.numeric(data_fit_DL$gen)
data_fit_DL$edit_distance = as.numeric(data_fit_DL$edit_distance)
data_fit_DL$environment = 'Fit'
data_fit_DL$metric = 'Damerau-Levenshtein'
data_flat_L = read.csv('edit_distance_flat_L.csv')
data_flat_L$locus = as.numeric(data_flat_L$locus)
data_flat_L$gen = as.numeric(data_flat_L$gen)
data_flat_L$edit_distance = as.numeric(data_flat_L$edit_distance)
data_flat_L$environment = 'Flat'
data_flat_L$metric = 'Levenshtein'
data_flat_DL = read.csv('edit_distance_flat_DL.csv')
data_flat_DL$locus = as.numeric(data_flat_DL$locus)
data_flat_DL$gen = as.numeric(data_flat_DL$gen)
data_flat_DL$edit_distance = as.numeric(data_flat_DL$edit_distance)
data_flat_DL$environment = 'Flat'
data_flat_DL$metric = 'Damerau-Levenshtein'
data = rbind(data_fit_L, data_flat_L, data_fit_DL, data_flat_DL)
data$gen_str = paste0('Generation ', data$gen)
data[data$locus == 1,]
ggplot(data[data$locus == 1,], aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = weighted_edit_distance/edit_distance, color = 'Edit Distance')) +
facet_grid(rows = vars(gen_str), cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value')
data[data$locus == 1,]$edit_distance
data[data$locus == 1,]$weighted_edit_distance / data[data$locus == 1,]$edit_distance
data_plot = data[data$locus == 1 & data$edit_distance != 0,]
data_plot
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = weighted_edit_distance/edit_distance, color = 'Edit Distance')) +
facet_grid(rows = vars(gen_str), cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value')
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = weighted_edit_distance/edit_distance, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value')
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = weighted_edit_distance/edit_distance, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value') +
scale_y_continuous(limts = c(0,1))
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = weighted_edit_distance/edit_distance, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value') +
scale_y_continuous(limits = c(0,1))
x = 1:200
y = dgeom(x = x, prob = 1/20/2)
plot(y ~ x)
x = 0:200
y = dgeom(x = x, prob = 1/20/2)
plot(y ~ x)
rgeom(n = 1000, prob = 1 / pop_size / 2)
pop_size = 20
rgeom(n = 1000, prob = 1 / pop_size / 2)
hist(rgeom(n = 1000, prob = 1 / pop_size / 2))
?regeom
?rgeom
hist(rgeom(n = 1000, prob = 1 / pop_size / 2))
hist(rgeom(n = 1000, prob = 1 / pop_size / 2), binsize = 1)
hist(rgeom(n = 1000, prob = 1 / pop_size / 2), binwidth = 1)
pop_size = 20
x = 1:200
y = rgeom(prob = 1 /pop_size / 2)
rm(list = ls())
pop_size = 20
x = 1:200
y = rgeom(prob = 1 /pop_size / 2)
x = 1:200
y = rgeom(length(x), prob = 1 /pop_size / 2)
data = data.frame(x = x, y = y)
rm(list = ls())
pop_size = 20
x = 1:200
y = rgeom(length(x), prob = 1 /pop_size / 2)
data = data.frame(x = x, y = y)
ggplot(data, aes(y)) +
geom_histogram(binwidth = 1)
rm(list = ls())
pop_size = 20
x = 1:200
y = rgeom(length(x), prob = 1 /pop_size / 2)
data = data.frame(x = x, y = y)
ggplot(data, aes(y)) +
geom_histogram(binwidth = 2)
rm(list = ls())
pop_size = 20
num_draws = 10000
x = 1:num_draws
y = rgeom(length(x), prob = 1 /pop_size / 2)
data = data.frame(x = x, y = y)
ggplot(data, aes(y)) +
geom_histogram(binwidth = 2)
rm(list = ls())
pop_size = 20
num_draws = 10000
x = 1:num_draws
y = rgeom(length(x), prob = 1 /pop_size / 2)
data = data.frame(x = x, y = y)
ggplot(data, aes(y)) +
geom_histogram(binwidth = 2) +
geom_vline(yintercept = pop_size * 2)
rm(list = ls())
pop_size = 20
num_draws = 10000
x = 1:num_draws
y = rgeom(length(x), prob = 1 /pop_size / 2)
data = data.frame(x = x, y = y)
ggplot(data, aes(y)) +
geom_histogram(binwidth = 2) +
geom_vline(xintercept = pop_size * 2)
rm(list = ls())
library(ggplot2)
setwd('~/documents/school/cur_sp20/multi_disciplinary_research/project/analysis/data/2')
data_fit_L = read.csv('edit_distance_fit_L.csv')
data_fit_L$locus = as.numeric(data_fit_L$locus)
data_fit_L$gen = as.numeric(data_fit_L$gen)
data_fit_L$edit_distance = as.numeric(data_fit_L$edit_distance)
data_fit_L$environment = 'Fit'
data_fit_L$metric = 'Levenshtein'
data_fit_DL = read.csv('edit_distance_fit_DL.csv')
data_fit_DL$locus = as.numeric(data_fit_DL$locus)
data_fit_DL$gen = as.numeric(data_fit_DL$gen)
data_fit_DL$edit_distance = as.numeric(data_fit_DL$edit_distance)
data_fit_DL$environment = 'Fit'
data_fit_DL$metric = 'Damerau-Levenshtein'
data_flat_L = read.csv('edit_distance_flat_L.csv')
data_flat_L$locus = as.numeric(data_flat_L$locus)
data_flat_L$gen = as.numeric(data_flat_L$gen)
data_flat_L$edit_distance = as.numeric(data_flat_L$edit_distance)
data_flat_L$environment = 'Flat'
data_flat_L$metric = 'Levenshtein'
data_flat_DL = read.csv('edit_distance_flat_DL.csv')
data_flat_DL$locus = as.numeric(data_flat_DL$locus)
data_flat_DL$gen = as.numeric(data_flat_DL$gen)
data_flat_DL$edit_distance = as.numeric(data_flat_DL$edit_distance)
data_flat_DL$environment = 'Flat'
data_flat_DL$metric = 'Damerau-Levenshtein'
data = rbind(data_fit_L, data_flat_L, data_fit_DL, data_flat_DL)
data$gen_str = paste0('Generation ', data$gen)
ggplot(data[data$gen %in% c(0,250, 500),], aes(x = locus, y = edit_distance, color = metric)) +
geom_line() +
facet_grid(rows = vars(gen_str), cols = vars(environment))
ggplot(data[data$gen %in% c(250) & data$environment == 'Fit',], aes(x = locus, y = edit_distance, color = metric)) +
geom_line() +
facet_grid(rows = vars(gen_str), cols = vars(environment))
ggplot(data[data$gen %in% c(250) & data$environment == 'Fit',], aes(x = locus, y = edit_distance, color = metric)) +
geom_line() +
facet_grid(rows = vars(gen_str), cols = vars(environment))
ggplot(data[data$gen %in% c(1) & data$environment == 'Fit',], aes(x = locus, y = edit_distance, color = metric)) +
geom_line() +
facet_grid(rows = vars(gen_str), cols = vars(environment))
ggplot(data[data$gen %in% c(1) & data$environment == 'Fit',], aes(x = locus, y = edit_distance, color = metric)) +
geom_line(hjust=1) +
facet_grid(rows = vars(gen_str), cols = vars(environment))
ggplot(data[data$gen %in% c(1) & data$environment == 'Fit',], aes(x = locus, y = edit_distance, color = metric)) +
geom_column() +
facet_grid(rows = vars(gen_str), cols = vars(environment))
ggplot(data[data$gen %in% c(1) & data$environment == 'Fit',], aes(x = locus, y = edit_distance, color = metric)) +
geom_col() +
facet_grid(rows = vars(gen_str), cols = vars(environment))
gens = c(1)
ggplot(data[data$gen %in% gens & data$environment == 'Fit',], aes(x = locus, y = edit_distance, color = metric)) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & metric = 'Levenshtein',], alpha = 0.5) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & metric = 'Damerau-Levenshtein',], alpha = 0.5) +
facet_grid(rows = vars(gen_str), cols = vars(environment))
gens = c(1)
ggplot(data[data$gen %in% gens & data$environment == 'Fit',], aes(x = locus, y = edit_distance, color = metric)) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Levenshtein',], alpha = 0.5) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Damerau-Levenshtein',], alpha = 0.5) +
facet_grid(rows = vars(gen_str), cols = vars(environment))
gens = c(1)
ggplot(data[data$gen %in% gens & data$environment == 'Fit',], aes(x = locus, y = edit_distance, color = metric)) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Levenshtein',], mapping = aes(), alpha = 0.5) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Damerau-Levenshtein',], mapping = aes(), alpha = 0.5) +
facet_grid(rows = vars(gen_str), cols = vars(environment))
gens = c(1)
ggplot(data[data$gen %in% gens & data$environment == 'Fit' & data$locus <= 50,], aes(x = locus, y = edit_distance, color = metric)) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Damerau-Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5) +
facet_grid(rows = vars(gen_str), cols = vars(environment))
ggplot(data[data$gen %in% gens & data$environment == 'Fit' & data$locus <= 50,], aes(x = locus, y = edit_distance, fill = metric)) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Damerau-Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5) +
facet_grid(rows = vars(gen_str), cols = vars(environment))
gens = c(1)
ggplot(data[data$gen %in% gens & data$environment == 'Fit' & data$locus <= 50,], aes(x = locus, y = edit_distance, fill = metric)) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Damerau-Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5) +
facet_grid(rows = vars(gen_str), cols = vars(environment))
gens = c(500)
ggplot(data[data$gen %in% gens & data$environment == 'Fit' & data$locus <= 50,], aes(x = locus, y = edit_distance, fill = metric)) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Damerau-Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5) +
facet_grid(rows = vars(gen_str), cols = vars(environment)) +
theme(edit_distance)
ggplot(data[data$gen %in% gens & data$environment == 'Fit' & data$locus <= 50,], aes(x = locus, y = edit_distance, fill = metric)) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Damerau-Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5) +
facet_grid(rows = vars(gen_str), cols = vars(environment)) +
theme(legend.position = 'bottom')
ggplot(data[data$gen %in% gens & data$environment == 'Fit' & data$locus <= 50,], aes(x = locus, y = edit_distance, fill = metric)) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5, position = position_dodge(0.2)) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Damerau-Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5) +
facet_grid(rows = vars(gen_str), cols = vars(environment)) +
theme(legend.position = 'bottom')
ggplot(data[data$gen %in% gens & data$environment == 'Fit' & data$locus <= 50,], aes(x = locus, y = edit_distance, fill = metric)) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5) +
geom_col(data[data$gen %in% gens & data$environment == 'Fit' & data$metric == 'Damerau-Levenshtein' & data$locus <= 50,], mapping = aes(), alpha = 0.5) +
facet_grid(rows = vars(gen_str), cols = vars(environment)) +
theme(legend.position = 'bottom')
y = data[data$environment == 'Fit' & data$metric == 'Levenshtein',]$edit_distance - data[data$environment == 'Fit' & data$metric == 'Damerau-Levenshtein',]$edit_distance
x = 1:length(y)
y = sort(y)
data_diff = data.frame(x = x, y = y)
ggplot(data_diff, aes(x, y)) +
geom_line() +
xlab('x') +
ylab('Levenshtein Distance - Damerau-Levenshtein Distance') +
ggsave('distance_metric_difference_line.pdf', units = 'in', width = 8, height = 6) +
ggsave('distance_metric_difference_line.png', units = 'in', width = 8, height = 6)
ggplot(data_diff, aes(x, y)) +
geom_point() +
xlab('x') +
ylab('Levenshtein Distance - Damerau-Levenshtein Distance') +
ggsave('distance_metric_difference_line.pdf', units = 'in', width = 8, height = 6) +
ggsave('distance_metric_difference_line.png', units = 'in', width = 8, height = 6)
y = data[data$environment == 'Fit' & data$metric == 'Levenshtein',]$edit_distance - data[data$environment == 'Fit' & data$metric == 'Damerau-Levenshtein',]$edit_distance
x = 1:length(y)
y = sort(y)
data_diff = data.frame(x = x, y = y)
ggplot(data_diff, aes(x, y)) +
geom_line() +
xlab('x') +
ylab('Levenshtein Distance - Damerau-Levenshtein Distance') +
ggsave('distance_metric_difference_line.pdf', units = 'in', width = 8, height = 6) +
ggsave('distance_metric_difference_line.png', units = 'in', width = 8, height = 6)
ggplot(data_diff, aes(x = y)) +
geom_histogram(binwidth = 1) +
xlab('Levenshtein Distance - Damerau-Levenshtein Distance') +
ylab('Count') +
ggsave('distance_metric_difference_histogram.pdf', units = 'in', width = 8, height = 6) +
ggsave('distance_metric_difference_histofram.png', units = 'in', width = 8, height = 6)
ggplot(data_diff, aes(x = y)) +
geom_histogram(binwidth = 1) +
xlab('Levenshtein Distance - Damerau-Levenshtein Distance') +
ylab('Count') +
ggsave('distance_metric_difference_histogram.pdf', units = 'in', width = 8, height = 6) +
ggsave('distance_metric_difference_histofram.png', units = 'in', width = 8, height = 6)
ggplot(data_diff, aes(x = y), fill = '#66aa99') +
geom_histogram(binwidth = 1) +
xlab('Levenshtein Distance - Damerau-Levenshtein Distance') +
ylab('Count') +
ggsave('distance_metric_difference_histogram.pdf', units = 'in', width = 8, height = 6) +
ggsave('distance_metric_difference_histofram.png', units = 'in', width = 8, height = 6)
ggplot(data_diff, aes(x = y)) +
geom_histogram(binwidth = 1, fill = '#66aa99') +
xlab('Levenshtein Distance - Damerau-Levenshtein Distance') +
ylab('Count') +
ggsave('distance_metric_difference_histogram.pdf', units = 'in', width = 8, height = 6) +
ggsave('distance_metric_difference_histofram.png', units = 'in', width = 8, height = 6)
ggplot(data_diff, aes(x = y)) +
geom_histogram(binwidth = 1, fill = '#66ee99', color = '#000000') +
xlab('Levenshtein Distance - Damerau-Levenshtein Distance') +
ylab('Count') +
ggsave('distance_metric_difference_histogram.pdf', units = 'in', width = 8, height = 6) +
ggsave('distance_metric_difference_histofram.png', units = 'in', width = 8, height = 6)
ggplot(data[data$gen %in% c(0,250, 500),], aes(x = locus, color = metric)) +
geom_line(mapping = aes(y = edit_distance, color = 'Edit Distance')) +
geom_line(mapping = aes(y = weighted_edit_distance, color = 'Weighted Edit Distance')) +
facet_grid(rows = vars(gen_str), cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value') +
ggsave('weight_effect.pdf', units = 'in', width = 6, height = 8) +
ggsave('weight_effect.png', units = 'in', width = 6, height = 8)
data_plot = data[data$locus == 1 & data$edit_distance != 0,]
ggplot(data[data$gen %in% c(0,250, 500),], aes(x = locus, color = metric)) +
geom_line(mapping = aes(y = edit_distance, color = 'Edit Distance')) +
geom_line(mapping = aes(y = weighted_edit_distance, color = 'Weighted Edit Distance')) +
facet_grid(cols = vars(gen_str), rows = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value') +
ggsave('weight_effect.pdf', units = 'in', width = 6, height = 8) +
ggsave('weight_effect.png', units = 'in', width = 6, height = 8)
data_plot = data[data$locus == 1 & data$edit_distance != 0,]
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = weighted_edit_distance/edit_distance, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value') +
scale_y_continuous(limits = c(0,1))
pop_size = 200
data_plot = data[data$locus == 1 & data$edit_distance != 0,]
data_plot$unique_genotypes = (data_plot$weighted_edit_distance * pop_size) / data$edit_distance
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = weighted_edit_distance/edit_distance, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value') +
scale_y_continuous(limits = c(0,1))
pop_size = 200
data_plot = data[data$locus == 1 & data$edit_distance != 0,]
pop_size = 200
data_plot = data[data$locus == 1 & data$edit_distance != 0,]
data_plot$unique_genotypes = (data_plot$weighted_edit_distance * pop_size) / data$edit_distance
data_plot$weighted_edit_distance * pop_size
pop_size = 200
data_plot = data[data$locus == 1 & data$edit_distance != 0,]
data_plot$unique_genotypes = (data_plot$weighted_edit_distance * pop_size) / data_plot$edit_distance
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = unique_genotypes, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value') +
scale_y_continuous(limits = c(0,1))
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = weighted_edit_distance/edit_distance, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value') +
scale_y_continuous(limits = c(0,1))
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = weighted_edit_distance/edit_distance, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value') +
scale_y_continuous(limits = c(0,1))
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = unique_genotypes, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value') +
scale_y_continuous(limits = c(0,1))
pop_size = 200
data_plot = data[data$locus == 1 & data$edit_distance != 0,]
data_plot$unique_genotypes = (data_plot$weighted_edit_distance * pop_size) / data_plot$edit_distance
data_plot$unique_genotypes
data_plot$unique_genotypes
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = unique_genotypes, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value')
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = unique_genotypes, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Unique Genotypes') +
xlab('Locus') +
labs(color = 'Value')
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = unique_genotypes, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Unique Genotypes') +
xlab('Generation') +
labs(color = 'Value')
pop_size = 200
data_plot = data[data$locus == 2 & data$edit_distance != 0,]
data_plot$unique_genotypes = (data_plot$weighted_edit_distance * pop_size) / data_plot$edit_distance
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = unique_genotypes, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Unique Genotypes') +
xlab('Generation') +
labs(color = 'Value')
pop_size = 200
data_plot = data[data$locus %in% c(0,99,199) & data$edit_distance != 0,]
pop_size = 200
data_plot = data[data$locus %in% c(0,99,199) & data$edit_distance != 0,]
data_plot$unique_genotypes = (data_plot$weighted_edit_distance * pop_size) / data_plot$edit_distance
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = unique_genotypes, color = 'Edit Distance')) +
facet_grid(cols = vars(environment), rows = vars(locus)) +
theme(legend.position = 'bottom') +
ylab('Unique Genotypes') +
xlab('Generation') +
labs(color = 'Value')
pop_size = 200
data_plot = data[data$locus == 1 & data$edit_distance != 0,]
data_plot$unique_genotypes = (data_plot$weighted_edit_distance * pop_size) / data_plot$edit_distance
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = unique_genotypes, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Unique Genotypes') +
xlab('Generation') +
labs(color = 'Value')
ggplot(data_plot, aes(x = gen, color = metric)) +
geom_line(mapping = aes(y = unique_genotypes, color = 'Edit Distance')) +
facet_grid(cols = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Unique Genotypes') +
xlab('Generation') +
labs(color = 'Value') +
ggsave('unique_genomes.pdf', units = 'in', width = 8, height = 6) +
ggsave('unique_genomes.png', units = 'in', width = 8, height = 6)
ggplot(data[data$gen %in% c(0,250, 500),], aes(x = locus, color = metric)) +
geom_line(mapping = aes(y = edit_distance, color = 'Edit Distance')) +
geom_line(mapping = aes(y = weighted_edit_distance, color = 'Weighted Edit Distance')) +
facet_grid(cols = vars(gen_str), rows = vars(environment)) +
theme(legend.position = 'bottom') +
ylab('Edit Distance') +
xlab('Locus') +
labs(color = 'Value') +
ggsave('weight_effect.pdf', units = 'in', width = 8, height = 6) +
ggsave('weight_effect.png', units = 'in', width = 8, height = 6)
############################################
rm(list = ls())
library(ggplot2)
setwd('~/documents/school/cur_sp20/multi_disciplinary_research/project/analysis/data/2')
data_fit = read.csv('edit_distance_fit.csv')
############################################
rm(list = ls())
library(ggplot2)
setwd('~/documents/school/cur_sp20/multi_disciplinary_research/project/analysis/data/2')
data_fit = read.csv('edit_distance_fit_L.csv')
data_fit$locus = as.numeric(data_fit$locus)
data_fit$gen = as.numeric(data_fit$gen)
data_fit$edit_distance = as.numeric(data_fit$edit_distance)
############################################
rm(list = ls())
library(ggplot2)
setwd('~/documents/school/cur_sp20/multi_disciplinary_research/project/analysis/data/2')
data_fit = read.csv('edit_distance_fit_L.csv')
data_fit$locus = as.numeric(data_fit$locus)
data_fit$gen = as.numeric(data_fit$gen)
data_fit$edit_distance = as.numeric(data_fit$edit_distance)
data_flat = read.csv('edit_distance_flat_L.csv')
data_flat$locus = as.numeric(data_flat$locus)
data_flat$gen = as.numeric(data_flat$gen)
data_flat$edit_distance = as.numeric(data_flat$edit_distance)
data_fit$treatment = 'fit'
data_flat$treatment = 'flat'
data = rbind(data_fit, data_flat)
data$gen_str = paste0('Generation ', data$gen)
ggplot(data[data$gen %in% c(0,250,499),], aes(x = edit_distance)) +
geom_histogram(binwidth = 5) +
facet_grid(rows = vars(treatment), cols = vars(gen_str)) +
xlab('Edit Distance')
rm(list = ls())
library(ggplot2)
setwd('~/documents/school/cur_sp20/multi_disciplinary_research/project/analysis/data/2')
data_fit = read.csv('edit_distance_fit_L.csv')
data_fit$locus = as.numeric(data_fit$locus)
data_fit$gen = as.numeric(data_fit$gen)
data_fit$edit_distance = as.numeric(data_fit$edit_distance)
data_flat = read.csv('edit_distance_flat_L.csv')
data_flat$locus = as.numeric(data_flat$locus)
data_flat$gen = as.numeric(data_flat$gen)
data_flat$edit_distance = as.numeric(data_flat$edit_distance)
data_fit$treatment = 'Fit'
data_flat$treatment = 'Flat'
data = rbind(data_fit, data_flat)
data$gen_str = paste0('Generation ', data$gen)
ggplot(data[data$gen %in% c(0,250,499),], aes(x = edit_distance)) +
geom_histogram(binwidth = 5) +
facet_grid(rows = vars(treatment), cols = vars(gen_str)) +
xlab('Edit Distance')
